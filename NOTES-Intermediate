extra notes:

Hooks
use hooks inside components
hooks performs action

Children componets

if we Wrap a Componant inside a container we use children
to render the child component inside the wrapped container

----------------------------------------------------------------------------
UseReducer hooks

1.const [state,dispatch]=useReducer(reducer,0)
2.function reducer(){                             <---- action handled by reducer
  if(action.type=="inc")
  {
    return state+action.payload
  }
}

3.onclick={()=>dispatch({type:"inc",payload:})}   <--- Dispatch action object


1.state-state variable
2.dispatch-dispatcher 
3.reducer- reducer function 
  a. function reducer(state,Action){

  }

4.0- initial value for state

-------------------------------------------------------------------------
UseReducer with object
----------------------------------------------------------------------------
 
function reducer(state, action){
  if(action.type=="inc"){
    return {...state,count:state.count+action.payload};
  }
  return state;
  
}
function App() {
  const [state ,dispatch]=useReducer(reducer,{count:0})

  return (
    <div>
          <h1>count :{state.count}</h1>
    <button onClick={()=>dispatch({type:"inc",payload:1})}>inc</button>
    </div>
     

  )
}

------------------------------------------------------------------------
 more complex one 
 ------------------
function App() {
  const [state ,dispatch]=useReducer(reducer,{count:0,incval:1})

  function reducer(state, action){
  if(action.type=="inc"){
    return {...state,count:state.count+state.incval};
  }
  if(action.type=="ivi"){
    return{...state,incval:action.payload};
  }
  return state;
  
}

  return (
          <div>
          <h1>count :{state.count}</h1>
          <input
          value={state.incval}
          type="number" 
          onChange={(e)=>dispatch({type:"ivi",payload:Number(e.target.value)})}></input>
          <button onClick={()=>dispatch({type:"inc",payload:1})}>inc</button>
          </div>
     

  )
}

export default App
----------------------------------------------------------------------------------------

BANK EXAMPLE -UseReducer

function App() {
  const [state ,dispatch]=useReducer(reducer,{balance:0})
  const [amount,setAmount]=useState(0)

  function reducer(state, action){
    if(action.type=="add"){
      return {...state,balance:state.balance+action.payload}
    }
    if(action.type=="del"){
      return {...state,balance:state.balance-action.payload}
    }
    return state;
  
}

  return (
    <div>
      <h1> Balance:{ state.balance}</h1>
      <input type="number"
       value={amount} onChange={(e)=>setAmount(e.target.value)}></input>
       <button onClick={()=>dispatch({type:"add",payload:Number(amount)})}>Deposit</button>
       <button onClick={()=>dispatch({type:"del",payload:Number(amount)})}>WithDrawl</button>
    </div>
        

  )
}
---------------------------------------------------------------------------------------

